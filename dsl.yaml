datasets:
  books:
    type: file
    path: "book_data.json"
  authors:
    type: file
    path: "author_data.json"

default_model: gpt-4o-mini

operations:
  analyze_title:
    type: map
    input:
      schema:
        title: str
    output:
      schema:
        title: str
        word_count: int
        theme: str
        genre: str
    prompt: |
      Analyze the book title: {{ title }}
      Provide the word count, theme, and genre.
    validate:
      - output["word_count"] > 0
      - len(output["theme"]) > 0
      - len(output["genre"]) > 0
    tests:
      - input:
          title: "The Great Gatsby"
        expect:
          title: "The Great Gatsby"
          word_count: 4
          theme: "wealth and decadence"
          genre: "fiction"

  analyze_author:
    type: map
    input:
      schema:
        name: str
        birth_year: int
    output:
      schema:
        writing_style: str
        primary_genre: str
    prompt: |
      Analyze the author: {{ name }} (born {{ birth_year }})
      Provide their writing style and primary genre. The genre should be at most a few words, not a full sentence.
    validate:
      - len(output["writing_style"]) > 0
      - len(output["primary_genre"]) > 0

  generate_summaries:
    type: flatmap
    model: gpt-4o-mini
    input:
      schema:
        title: str
        theme: str
    output:
      schema:
        summary: str
    prompt: |
      Generate two summaries for the book "{{ title }}" with theme "{{ theme }}".
    validate:
      - len(output) == 2
      - all(len(summary["summary"]) > 0 for summary in output)
    tests:
      - input:
          title: "To Kill a Mockingbird"
          theme: "racial injustice"
        expect:
          - title: "To Kill a Mockingbird"
            summary: "A story about racial injustice and loss of innocence in the American South."
          - title: "To Kill a Mockingbird"
            summary: "Set in the 1930s Alabama, the novel follows Scout Finch as she learns about injustice when her father defends a black man falsely accused of a crime. It explores themes of racial inequality, moral growth, and the loss of innocence."

  genre_summary:
    type: reduce
    reduce_key: genre
    input:
      schema:
        title: str
        word_count: int
        theme: str
        genre: str
    output:
      schema:
        book_count: int
        common_themes: list[str]
        average_word_count: float
        summary: str
    prompt: |
      Summarize the books in the {{ reduce_key }} genre:
      Books:
      {% for book in values %}
      - Title: "{{ book.title }}"
        Word Count: {{ book.word_count }}
        Theme: "{{ book.theme }}"
        Genre: "{{ book.genre }}"
      {% endfor %}
      Provide a concise summary of the genre based on these books, including:
      1. The number of books
      2. Common themes (list of 3-5 themes)
      3. Average word count of titles
      4. A brief overview of the genre based on these books
    validate:
      - output["book_count"] > 0
      - len(output["common_themes"]) >= 3
      - output["average_word_count"] > 0
      - len(output["summary"]) > 50
    tests:
      - input:
          reduce_key: "science fiction"
          values:
            - title: "Dune"
              word_count: 1
              theme: "political intrigue and ecology"
              genre: "science fiction"
            - title: "Neuromancer"
              word_count: 1
              theme: "cyberpunk and artificial intelligence"
              genre: "science fiction"
            - title: "The Hitchhiker's Guide to the Galaxy"
              word_count: 7
              theme: "absurdist space adventure"
              genre: "science fiction"
        expect:
          genre: "science fiction"
          book_count: 3
          common_themes:
            [
              "future technology",
              "space exploration",
              "cyberpunk",
              "artificial intelligence",
              "political ecology",
            ]
          average_word_count: 3.0
          summary: "Science fiction books in this sample explore diverse themes from political ecology to cyberpunk, showcasing the genre's breadth. They often focus on technological advancements and their impact on society."

  is_fiction:
    type: filter
    input:
      schema:
        genre: str
    output:
      schema:
        is_fiction: bool
    prompt: |
      Is the genre '{{ genre }}' fiction? Answer 'Yes' or 'No'.
    tests:
      - input:
          genre: "fiction"
        expect:
          is_fiction: true

  join_book_author:
    type: equijoin
    left_key: genre
    right_key: primary_genre

pipeline:
  steps:
    - name: book_analysis
      input: books
      operations:
        - analyze_title
        - is_fiction
        - generate_summaries
        - genre_summary

    - name: author_analysis
      input: authors
      operations:
        - analyze_author

    - name: combined_analysis
      operations:
        - join_book_author:
            left: book_analysis
            right: author_analysis

  output:
    type: file
    path: "genre_summaries.json"
