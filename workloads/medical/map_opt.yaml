datasets:
  transcripts:
    path: /Users/shreyashankar/Documents/hacking/motion-v3/workloads/medical/raw_with_id.json
    type: file
default_model: gpt-4o-mini
operations:
  split_extract_medical_info:
    chunk_size: 351
    peripheral_chunks:
      previous:
        tail:
          count: 2
    split_key: src
    type: split
  submap_extract_medical_info:
    model: gpt-4o-mini
    output:
      schema:
        dosages: list[str]
        medications: list[str]
        symptoms: list[str]
    prompt: "Analyze the following chunk of a conversation between a doctor and a\
      \ patient:\n\n{{ input.chunk_content }}\n\nExtract and list all medications,\
      \ dosages, and symptoms mentioned in the chunk.\nIf a piece of information is\
      \ not found, return an empty list for that category.\n\nProvide your response\
      \ in the following JSON format:\n{\n  \"medications\": [\"medication1\", \"\
      medication2\", ...],\n  \"dosages\": [\"dosage1\", \"dosage2\", ...],\n  \"\
      symptoms\": [\"symptom1\", \"symptom2\", ...]\n} Only process the main chunk."
    type: map
  subreduce_extract_medical_info:
    input:
      schema:
        dosages: list[str]
        medications: list[str]
        symptoms: list[str]
    model: gpt-4o-mini
    output:
      schema:
        dosages: list[str]
        medications: list[str]
        symptoms: list[str]
    pass_through: true
    prompt: "Combine the following chunked results of medication, dosage, and symptom\
      \ information extracted from a transcript of a conversation between a doctor\
      \ and a patient to create a final comprehensive list for each category. If a\
      \ piece of information is not found, it will be an empty list.\n\nInput:\n{{\
      \ values }}\n\nProvide your response in the following JSON format:\n{\n  \"\
      medications\": [\"medication1\", \"medication2\", ...],\n  \"dosages\": [\"\
      dosage1\", \"dosage2\", ...],\n  \"symptoms\": [\"symptom1\", \"symptom2\",\
      \ ...]\n}\n"
    reduce_key: document_id
    type: reduce
pipeline:
  output:
    path: extracted_medical_info.json
    type: file
  steps:
  - input: transcripts
    name: medical_info_extraction
    operations:
    - split_extract_medical_info
    - submap_extract_medical_info
    - subreduce_extract_medical_info
